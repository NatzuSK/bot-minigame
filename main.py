import nextcord
from nextcord.ext import commands
from nextcord.ui import Button, View
import json
import random
import asyncio


bot = commands.Bot(command_prefix="!", intents=nextcord.Intents.all())
config = json.load(open("config.json","r"))

def rockpaper(choice):
    bot_choice = random.choice(["rock", "paper", "scissors"])

    if choice == bot_choice:
        return "‡πÄ‡∏™‡∏°‡∏≠"  

    elif choice == "rock":
        if bot_choice == "scissors":
            return "‡∏ä‡∏ô‡∏∞"  
        elif bot_choice == "paper":
            return "‡πÅ‡∏û‡πâ"  

    elif choice == "paper":
        if bot_choice == "rock":
            return "‡∏ä‡∏ô‡∏∞" 
        elif bot_choice == "scissors":
            return "‡πÅ‡∏û‡πâ"

    elif choice == "scissors":
        if bot_choice == "paper":
            return "‡∏ä‡∏ô‡∏∞"  
        elif bot_choice == "rock":
            return "‡πÅ‡∏û‡πâ" 

    else:
        return "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å 'rock', 'paper', ‡∏´‡∏£‡∏∑‡∏≠ 'scissors' ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô!"






@bot.slash_command(name="‡∏Ñ‡∏¥‡∏î‡πÄ‡∏•‡∏Ç‡πÑ‡∏ß", description="‡∏ï‡∏≠‡∏ö‡πÇ‡∏à‡∏ó‡∏¢‡πå‡πÄ‡∏•‡∏Ç‡πÉ‡∏´‡πâ‡πÑ‡∏ß!")
async def fast_math(interaction: nextcord.Interaction):
    a = random.randint(1, 1000)
    b = random.randint(1, 1000)
    operator = random.choice(["+", "-"])

    if operator == "-" and a < b:
        a, b = b, a

    question = f"{a} {operator} {b}"
    answer = eval(question)

    question_embed = nextcord.Embed(
        color=nextcord.Color.orange(),
        title="üí° ‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏Ñ‡∏¥‡∏î‡πÑ‡∏ß",
        description=f"```{question} = ?```"
    )
    question_embed.set_footer(text="‡∏ï‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ô 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ!")

    await interaction.response.send_message(embed=question_embed, ephemeral=True)

    def check(m):
        return m.author == interaction.user and m.channel == interaction.channel

    try:
        msg = await bot.wait_for("message", timeout=10.0, check=check)
        if msg.content.strip() == str(answer):
            await msg.delete()
            result_embed = nextcord.Embed(
                color=nextcord.Color.blue(),
                title="‚úÖ ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!",
                description="```‡πÄ‡∏Å‡πà‡∏á‡∏°‡∏≤‡∏Å‡∏Å‡∏Å üéâ```"
            )
        else:
            await msg.delete()
            result_embed = nextcord.Embed(
                color=nextcord.Color.blue(),
                title="‚ùå ‡∏ú‡∏¥‡∏î‡∏ô‡∏∞",
                description=f"```‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏∑‡∏≠ {answer}```"
            )
        await interaction.followup.send(embed=result_embed, ephemeral=True)
    except asyncio.TimeoutError:
        await msg.delete()
        timeout_embed = nextcord.Embed(
            color=nextcord.Color.blue(),
            title="‚è∞ ‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤!",
            description=f"```‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏∑‡∏≠ {answer}```"
        )
        await interaction.followup.send(embed=timeout_embed, ephemeral=True)







@bot.slash_command(name="‡πÄ‡∏õ‡πâ‡∏≤‡∏¢‡∏¥‡πâ‡∏á‡∏â‡∏∏‡∏ö", description="‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°‡∏¢‡∏¥‡πâ‡∏á‡∏â‡∏∏‡∏ö")
async def rock_paper_scissors(interaction: nextcord.Interaction):

    rock_button = Button(label="‡∏Ñ‡πâ‡∏≠‡∏ô", style=nextcord.ButtonStyle.primary, custom_id="rock")
    paper_button = Button(label="‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©", style=nextcord.ButtonStyle.primary, custom_id="paper")
    scissors_button = Button(label="‡∏Å‡∏£‡∏£‡πÑ‡∏Å‡∏£", style=nextcord.ButtonStyle.primary, custom_id="scissors")
    
    view = View()
    view.add_item(rock_button)
    view.add_item(paper_button)
    view.add_item(scissors_button)
    
    embed = nextcord.Embed(
        color=nextcord.Color.blue(),
        title="**Mini Game ‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß‡∏ß‡∏ß**",
        description="```‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏Ñ‡πâ‡∏≠‡∏ô,‡∏Å‡∏£‡∏£‡πÑ‡∏Å‡∏£‡∏°,‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏© ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏¢‡∏¢üòã```"
    )
    embed.set_image(url="https://mir-s3-cdn-cf.behance.net/project_modules/disp/d1e3cf36880203.5731151fed538.gif")

    await interaction.response.send_message(embed=embed, view=view ,ephemeral=True)

    async def button_callback(interaction: nextcord.Interaction):
        user_choice = interaction.data["custom_id"]
        result = rockpaper(user_choice)
        if result == "‡∏ä‡∏ô‡∏∞":
            embed = nextcord.Embed(
                color=nextcord.Color.blue(),
                title="**‡∏Ñ‡∏∏‡∏ì‡∏ä‡∏ô‡∏∞**",
                description="```‡∏ü‡∏•‡∏∏‡πä‡∏Ñ‡∏£‡∏∂‡∏õ‡πà‡∏≤‡∏ß‡∏ß‡∏ß‡∏ß‡∏ß‡∏ß üòú```"
            )
            await interaction.response.edit_message(view=None,embed=embed)
        elif result == "‡πÄ‡∏™‡∏°‡∏≠":
            embed = nextcord.Embed(
                color=nextcord.Color.blue(),
                title="**‡πÄ‡∏™‡∏°‡∏≠**",
                description="```‡∏ä‡∏ô‡∏∞‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ß‡πâ‡∏≤‡∏¢‡∏¢‡πÜ‡πÜ‡πÜ üòú```"
            )
            await interaction.response.edit_message(view=None,embed=embed)
        elif result == "‡πÅ‡∏û‡πâ":
            embed = nextcord.Embed(
                color=nextcord.Color.blue(),
                title="**‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏û‡πâ**",
                description="```‡∏≠‡πà‡∏≠‡∏ô‡πÜ‡πÅ‡∏û‡πâ‡∏ö‡∏≠‡∏ó üòú```"
            )
            await interaction.response.edit_message(view=None,embed=embed)

    rock_button.callback = button_callback
    paper_button.callback = button_callback
    scissors_button.callback = button_callback




@bot.event
async def on_ready():
    print(f'‚úÖ Logged in as {bot.user}')


bot.run(config["token"])
